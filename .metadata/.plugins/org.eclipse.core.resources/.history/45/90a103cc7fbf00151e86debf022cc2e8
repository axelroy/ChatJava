
package ch.hearc.cours.moo.heritage.formes;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class Dessin implements Iterable<Formes>
	{
	
	/*------------------------------------------------------------------*\
	|*							Constructeurs							*|
	\*------------------------------------------------------------------*/
	
	public Dessin(String nom)
		{
		this.nom = nom;
		listFormes = new ArrayList<Formes>();
		}
		
	public Dessin(Dessin source)
		{
		this(source.nom);
		
		for(Formes f:source)
			{
			this.listFormes.add(f.cloneOf());
			}
		}
		
	/*------------------------------------------------------------------*\
	|*							Methodes Public							*|
	\*------------------------------------------------------------------*/
	
	@Override
	public Iterator<Formes> iterator()
		{
		return listFormes.iterator();
		}
		
	public Dessin cloneOf()
		{
		return new Dessin(this);
		}
		
	@Override
	public String toString()
		{
		StringBuilder stringBuilder = new StringBuilder();
		for(Formes f:this)
			{
			stringBuilder.append(f.toString());
			stringBuilder.append("\n");
			}
			
		return stringBuilder.toString();
		}
		
	/*------------------------------*\
	|*				Set				*|
	\*------------------------------*/
	
	/*------------------------------*\
	|*				Get				*|
	\*------------------------------*/
	
	/*------------------------------------------------------------------*\
	|*							Methodes Private						*|
	\*------------------------------------------------------------------*/
	
	/*------------------------------------------------------------------*\
	|*							Attributs Private						*|
	\*------------------------------------------------------------------*/
	
	//Inputs
	private String nom;
	
	//Tools
	private List<Formes> listFormes;
	
	}
